// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Customer {
  id        String   @id
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation to Customer
  reviews  Review[]
  comments Comment[]
}

model Review {
  id        String   @id @default(cuid())
  rating    Int
  title     String?
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation to Customer
  customerId String
  customer   Customer @relation(fields: [customerId], references: [id])

  // A review can have many comments
  comments Comment[]
}

model Comment {
  id        String   @id @default(cuid())
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation to the Customer who wrote the comment.
  authorId String
  author   Customer @relation(fields: [authorId], references: [id])

  // Relation to the review this comment is on
  reviewId String
  review   Review @relation(fields: [reviewId], references: [id])

  // Self-relation for threaded comments/replies
  // A comment can have a parent comment

  parentId String?
  parent   Comment?  @relation("Replies", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies  Comment[] @relation("Replies")
}
